[% WARNING %]
package WebService::Bonusly::[% service.ucfirst %];

use v5.14;
use Moose;
use Carp;

extends 'WebService::Bonusly::Service';

# ABSTRACT: Implements the bonus.ly [% service %] service

=head1 DESCRIPTION

This module implements the service. For documentation of this service, see L<WebService::Bonusly>

=cut

[% FOR method IN methods -%]
[% name = method.key -%]
[% def  = method.value %]
sub [% name -%] {
    my ($self, %params) = @_;

    my %clean;
    [% FOR field IN def.required.merge(def.optional) -%]
    [% IF field.match('^%'); field = field.replace('^%', '') %]
    croak "parameter [% field -%] must be a HASH for [% service -%]->[% name -%]"
        if defined $params{[% field %]} and ref($params{[% field %]}) ne 'HASH';
    [% END -%]
    [% IF def.is_required(field) %]
    croak "parameter [% field -%] is required for [% service -%]->[% name -%]"
        unless defined $params{[% field -%]};
    [% END %]
    $clean{[% field -%]} = delete $params{[% field -%]}
        if defined $params{[% field %]};
    [% END -%]

    [% IF def.allow_any %]
    $clean{$_} = $params{$_} for keys %params;
    [% END -%]

    return $self->_perform_action(
        '[% def.method %]',
        '[% def.path %]',
        \%clean,
        [% IF NOT def.token %]'tokenless',[% END %]
    );
}
[% END -%]

=for Pod::Coverage *EVERYTHING*
=cut

__PACKAGE__->meta->make_immutable;
